#include <stdio.h>
#include <stdarg.h>
#include <Windows.h>

typedef enum {
    SUCCESS = 0,
    INCORRECT_ARGUMENT_INPUT,
    INCORRECT_NUMBER_ARGUMENTS_INPUT,
    UNKNOWN_ERROR
} ErrorCode;

static const char* errorMessages[] = {
        "Всё хорошо",
        "Некорректный аргумент, попробуйте ещё раз",
        "Некорректное кол-во аргументов, попробуйте ещё раз",
        "Неизвестная ошибка, что-то пошло не так"
};

void printMessage(int isCorrectRepresentation, double number, int base) {
    if(!isCorrectRepresentation && number < 1e-100) {
        printf("HAS FINITE REPRESENTATION: %s\n", errorMessages[INCORRECT_ARGUMENT_INPUT]);
        exit(INCORRECT_ARGUMENT_INPUT);
    } else {
        printf("%.3f", number);
        if (!isCorrectRepresentation) printf(" не");
        printf(" имеет к/п в системе счисления с основанием %d\n", base);
    }
}

void funcSeparator() {
    printf("\n");
}

int hasFiniteRepresentation(int base, int count, ...) {
    va_list args;
    va_start(args, count);

    for (int i = 0; i < count; i++) {
        double number = va_arg(args, double);
        double fractionalPart = number - (int)number;

        while (fractionalPart != 0 && fractionalPart * base <= 1)
            fractionalPart *= base;

        if (fractionalPart - (int)fractionalPart <= 0.001)
            printMessage(1, number, base);
        else printMessage(0, number, base);
    }

    va_end(args);
    funcSeparator();

    return SUCCESS;
}

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    double a = 1.0/6.0;

    hasFiniteRepresentation(2, 3, 'a', 0.25, 0.0);
    hasFiniteRepresentation(6, 3, a, "asd", 0.0);

    return SUCCESS;
}
