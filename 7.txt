#include <stdio.h>
#include <math.h>
#include <Windows.h>

typedef enum {
    SUCCESS = 0,
    INCORRECT_NUMBER_ARGUMENTS_INPUT,
    UNKNOWN_ERROR
} ErrorCode;

static const char* errorMessages[] = {
        "Всё хорошо",
        "Некорректное кол-во аргументов, попробуйте ещё раз",
        "Неизвестная ошибка, что-то пошло не так"
};

double equation(double x) {
    return pow(x, 2) - 2;
}

char* convertToString(double num, char *result) {
    char resultBeforePoint[100], resultAfterPoint[100];
    int separator = (int)1e9, intNum = (int)(num*separator);

    itoa(intNum%separator, resultAfterPoint, 10);
    itoa(intNum/separator, resultBeforePoint, 10);

    sprintf(result, "%s.%s", resultBeforePoint, resultAfterPoint);

    return result;
}

char* findRoot(double a, double b, double epsilon, double (*func)(double), char *result) {
    double fa = func(a);
    double fb = func(b);

    if (fa * fb > 0) return "ERR!";

    double c, fc;

    do {
        c = (a + b) / 2;
        fc = func(c);

        if (fabs(fc) < epsilon) break;

        if (fa * fc < 0) {
            b = c;
            fb = fc;
        } else {
            a = c;
            fa = fc;
        }
    } while (b - a > epsilon);

    convertToString(c, result);

    return result;
}

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);

    double a = 0, b = 2, epsilon = 0.0001;

    char result[200];

    for(int i=0; i<200; i++)
        result[i] = '\0';

    char* root = findRoot(a, b, epsilon, equation, result);

    if(strcmp(root, "ERR!") == 0) printf("Корня не существует");
    else printf("Корень уравнения: %s\n", root);

    return SUCCESS;
}
