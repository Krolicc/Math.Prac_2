#include <stdio.h>
#include <math.h>
#include <Windows.h>

typedef enum {
    SUCCESS = 0,
    VIOLATION_CONVEXITY,
    INCORRECT_POINT_NUMBER_INPUT,
    INCORRECT_FLAG_INPUT,
    INCORRECT_NUMBER_ARGUMENTS_INPUT,
    FILE_OPENING_ERROR,
    FILE_READING_ERROR,
    FILE_WRITING_ERROR,
    FILE_CLOSING_ERROR,
    UNKNOWN_ERROR
} ErrorCode;

static const char* errorMessages[] = {
        "Всё хорошо",
        "Нарушение выпуклости",
        "Некорректное число точек, попробуйте ещё раз",
        "Некорректный ввод флага, попробуйте ещё раз",
        "Некорректное кол-во аргументов, попробуйте ещё раз",
        "Ошибка открытия файла",
        "Ошибка чтения файла",
        "Ошибка записи файла",
        "Ошибка закрытия файла",
        "Неизвестная ошибка, что-то пошло не так"
};

double equation(double x) {
    return pow(x, 2) - 2;
}

void printMessage( char *string) {
    printf("%s", string);
}

double findRoot(double a, double b, double epsilon, double (*func)(double)) {
    double fa = func(a);
    double fb = func(b);

    if (fa * fb > 0) {
        printMessage("Корень не существует в данном интервале\n");
        return -1;
    }

    double c, fc;

    do {
        c = (a + b) / 2;
        fc = func(c);

        if (fabs(fc) < epsilon) {
            break;
        }

        if (fa * fc < 0) {
            b = c;
            fb = fc;
        } else {
            a = c;
            fa = fc;
        }
    } while (b - a > epsilon);

    return c;
}

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    double a = 0;
    double b = 2;
    double epsilon = 0.0001;

    double root = findRoot(a, b, epsilon, equation);

    printf("Корень уравнения: %lf\n", root);

    return SUCCESS;
}
